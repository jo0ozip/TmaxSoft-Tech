##### JEUS 세션 클러스터링 옵션
- JEUS 동일한 SCF ID를 사용하는 Pod 간 세션 클러스터링이 가능함
  yaml 파일의 env로 SCF_ID를 설정할 수 있음
        env:
        - name: SCF_ID
          value: "tmaxgroup-1"
- SCF 통신을 위해 Role 설정
  첨부된 clusterRole.yaml, clusterRoleBinding.yaml을 사용하여 Role 생성
  특정 ServiceAccount에서만 사용하고자하는 경우 ClusterRole 대신 Role, RoleBinding,  ServiceAccount를 생성하고 Deployment 생성 시 ServiceAccount 명시

##### Redis를 사용 세션 클러스터링 옵션
- JEUS는 Redis와 연동하여 세션 클러스터링이 가능하며 동일한 scope이 설정된 Pod 간 세션 클러스터링이 가능함
  설정하지 않으면 domain_wide로 동작함
  scope 설정은 yaml 파일의 JVM 옵션에 설정 가능함
        env:
        - name: JAVA_VM_PROPERTIES
          value: "-Xms512m -Xmx512m -XX:MetaspaceSize=256m -verbose:gc -XX:+UseG1GC -XX:+HeapDumpOnOutOfMemoryError -Djeus.session.shared.scope=redisScope"


##### 세션 테스트 방법 (JEUS 세션 클러스터링, Redis 사용 모두 동일하게 테스트 가능)
1) 도메인/test/setSession.jsp?id=test
session set, attribute id 생성

2) 도메인/test/getSession.jsp
session get
====================================================
Session Get
Hostname : jeus-6996fb857b-xswkx    ==> session 생성된 Pod
Session ID : YRHMNBOsn0BYITOSxRyUJV3UUGxVSr2pPwl6dS78CNuEiXJDlIoaZb1yIbfoVMcE.domain1/jeus-6996fb857b-xswkx
Session Get : test

Session Timeout : 1800 sec.
Session Timeout : 30 min.
Session Timeout : 0.5 hour.

session.getLastAccessedTime() : Mon Jun 09 18:09:06 KST 2025
session.getCreationTime() : Mon Jun 09 18:09:06 KST 2025
====================================================

3) 세션 생성된 Pod의 JEUS down
Pod : jeus-76bd4b749d-m75j6
해당  Pod에 접속하여 /home/tmax/scripts/scripts/stop.sh 수행

